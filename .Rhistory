message(round(sum(d, na.rm = T)/1000,2),
" kg emissions in ", hour, " hours and ", day, " days")
return(EmissionsArray(d))
}
# veh is a list of "Vehicles" data-frames
} else {
if(ncol(veh[[1]]) != length(ef)){
message("Number of columns of 'veh' is different than length of 'ef'")
message("adjusting length of ef to the number of colums of 'veh'\n")
if(ncol(veh[[1]]) > length(ef)){
for(i in (length(ef) + 1):ncol(veh[[1]]) ){
ef[[i]] <- ef[[length(ef)]]
}
if (ncol(veh[[1]]) < length(ef)){
ff <- list()
for(i in 1:ncol(veh[[1]])){
ff[[i]] <- ef[[i]]
}
ef <- ff
}
}
}
for (j in 1:length(veh)) {
for (i  in 1:ncol(veh[[j]]) ) {
veh[[j]][,i] <- as.numeric(veh[[j]][,i])
} }
if(array == F){
lista <- lapply(1:length(veh),function(i){
lapply(1:agemax, function(k){
veh[[i]][, k]*lkm*ef[[k]](speed[, i])
} ) } )
return(EmissionsList(lista))
} else {
d <-  simplify2array(
lapply(1:length(veh),function(i){
simplify2array(
lapply(1:agemax, function(k){
veh[[i]][, k]*lkm*ef[[k]](speed[, i])
}) ) }) )
message(round(sum(d, na.rm = T)/1000,2),
" kg emissions in ", hour, " hours")
return(EmissionsArray(d))
}
}
!inherits(x = veh, what = "list")
for (i  in 1:ncol(veh) ) {
veh[,i] <- as.numeric(veh[,i])
}
if(ncol(veh) != length(ef)){
message("Number of columns of 'veh' is different than length of 'ef'")
message("adjusting length of ef to the number of colums of 'veh'\n")
if(ncol(veh) > length(ef)){
for(i in (length(ef) + 1):ncol(veh) ){
ef[[i]] <- ef[[length(ef)]]
}
if (ncol(veh) < length(ef)){
ff <- list()
for(i in 1:ncol(veh)){
ff[[i]] <- ef[[i]]
}
ef <- ff
}
}
}
if(ncol(veh[[1]]) != length(ef)){
message("Number of columns of 'veh' is different than length of 'ef'")
message("adjusting length of ef to the number of colums of 'veh'\n")
if(ncol(veh[[1]]) > length(ef)){
for(i in (length(ef) + 1):ncol(veh[[1]]) ){
ef[[i]] <- ef[[length(ef)]]
}
if (ncol(veh[[1]]) < length(ef)){
ff <- list()
for(i in 1:ncol(veh[[1]])){
ff[[i]] <- ef[[i]]
}
ef <- ff
}
}
}
for (j in 1:length(veh)) {
for (i  in 1:ncol(veh[[j]]) ) {
veh[[j]][,i] <- as.numeric(veh[[j]][,i])
} }
d <-  simplify2array(
lapply(1:day,function(j){
simplify2array(
lapply(1:hour,function(i){
simplify2array(
lapply(1:agemax, function(k){
veh[, k]*profile[i,j]*lkm*ef[[k]](speed[, i])
}) ) }) ) }) )
lef <- ef_ldv_scaled(co1, cod, v = "PC", t = "4S", cc = "<=1400",
f = "G",p = "CO", eu=co1$Euro_LDV)
agemax = if (!inherits(x = veh, what = "list")) {
ncol(veh)
} else {
ncol(veh[[1]])
}
hour = nrow(profile)
hour
day = ncol(profile)
day
if(units(lkm)$numerator == "m" ){
stop("Units of lkm is 'm'")
}
if(is.data.frame(profile)){
profile <- profile
} else if(is.matrix(profile)){
profile <- profile
} else if(is.vector(profile)){
profile <- matrix(profile, ncol = 1)
}
lkm <- as.numeric(lkm)
speed <- as.data.frame(speed)
for (i  in 1:ncol(speed) ) {
speed[, i] <- as.numeric(speed[, i])
}
# veh is "Vehicles" data-frame
if (!inherits(x = veh, what = "list")) {
veh <- as.data.frame(veh)
for (i  in 1:ncol(veh) ) {
veh[,i] <- as.numeric(veh[,i])
}
if(ncol(veh) != length(ef)){
message("Number of columns of 'veh' is different than length of 'ef'")
message("adjusting length of ef to the number of colums of 'veh'\n")
if(ncol(veh) > length(ef)){
for(i in (length(ef) + 1):ncol(veh) ){
ef[[i]] <- ef[[length(ef)]]
}
if (ncol(veh) < length(ef)){
ff <- list()
for(i in 1:ncol(veh)){
ff[[i]] <- ef[[i]]
}
ef <- ff
}
}
}
if(array == F){
lista <- lapply(1:day,function(j){
lapply(1:hour,function(i){
lapply(1:agemax, function(k){
veh[, k]*profile[i,j]*lkm*ef[[k]](speed[, i])
}) }) })
return(EmissionsList(lista))
} else {
d <-  simplify2array(
lapply(1:day,function(j){
simplify2array(
lapply(1:hour,function(i){
simplify2array(
lapply(1:agemax, function(k){
veh[, k]*profile[i,j]*lkm*ef[[k]](speed[, i])
}) ) }) ) }) )
message(round(sum(d, na.rm = T)/1000,2),
" kg emissions in ", hour, " hours and ", day, " days")
return(EmissionsArray(d))
}
# veh is a list of "Vehicles" data-frames
} else {
if(ncol(veh[[1]]) != length(ef)){
message("Number of columns of 'veh' is different than length of 'ef'")
message("adjusting length of ef to the number of colums of 'veh'\n")
if(ncol(veh[[1]]) > length(ef)){
for(i in (length(ef) + 1):ncol(veh[[1]]) ){
ef[[i]] <- ef[[length(ef)]]
}
if (ncol(veh[[1]]) < length(ef)){
ff <- list()
for(i in 1:ncol(veh[[1]])){
ff[[i]] <- ef[[i]]
}
ef <- ff
}
}
}
for (j in 1:length(veh)) {
for (i  in 1:ncol(veh[[j]]) ) {
veh[[j]][,i] <- as.numeric(veh[[j]][,i])
} }
if(array == F){
lista <- lapply(1:length(veh),function(i){
lapply(1:agemax, function(k){
veh[[i]][, k]*lkm*ef[[k]](speed[, i])
} ) } )
return(EmissionsList(lista))
} else {
d <-  simplify2array(
lapply(1:length(veh),function(i){
simplify2array(
lapply(1:agemax, function(k){
veh[[i]][, k]*lkm*ef[[k]](speed[, i])
}) ) }) )
message(round(sum(d, na.rm = T)/1000,2),
" kg emissions in ", hour, " hours")
return(EmissionsArray(d))
}
}
d <-  simplify2array(
lapply(1:day,function(j){
simplify2array(
lapply(1:hour,function(i){
simplify2array(
lapply(1:agemax, function(k){
veh[, k]*profile[i,j]*lkm*ef[[k]](speed[, i])
}) ) }) ) }) )
1:day
1:hour
1:agemax
dim(veh)
agemax = if (!inherits(x = veh, what = "list")) {
ncol(veh)
} else {
ncol(veh[[1]])
}
agemax
class(veh)
agemax = ifelse(is.data.frame(veh), ncol(veh),
ncol(veh[[1]]))
agemax
is.data.frame(veh)
ncol(veh)
dim(veh)
pc1
dim(pc1)
veh <- pc2
veh <- pc1
agemax = ifelse(is.data.frame(veh), ncol(veh),
ncol(veh[[1]]))
agemax
if(ncol(veh) != length(ef)){
message("Number of columns of 'veh' is different than length of 'ef'")
message("adjusting length of ef to the number of colums of 'veh'\n")
if(ncol(veh) > length(ef)){
for(i in (length(ef) + 1):ncol(veh) ){
ef[[i]] <- ef[[length(ef)]]
}
if (ncol(veh) < length(ef)){
ff <- list()
for(i in 1:ncol(veh)){
ff[[i]] <- ef[[i]]
}
ef <- ff
}
}
}
d <-  simplify2array(
lapply(1:day,function(j){
simplify2array(
lapply(1:hour,function(i){
simplify2array(
lapply(1:agemax, function(k){
veh[, k]*profile[i,j]*lkm*ef[[k]](speed[, i])
}) ) }) ) }) )
1:day
1:hour
1:agemax
dim(prpfile)
dim(profile)
d <-  simplify2array(
lapply(1:day,function(j){
simplify2array(
lapply(1:hour,function(i){
simplify2array(
lapply(1:agemax, function(k){
veh[, k]*profile[i,j]*lkm*ef[[k]](speed[, 1:i*j])
}) ) }) ) }) )
veh[, k]
class(profile)
profile
dim(profile)
d <-  simplify2array(
lapply(1:day,function(j){
simplify2array(
lapply(1:hour,function(i){
simplify2array(
lapply(1:agemax, function(k){
veh[, k]*profile[i,j]*lkm*ef[[k]](speed[, 1:i*j])
}) ) }) ) }) )
dim(veh)
dim(profile)
dim(lkm)
length(lkm)
lkm <- net$lkm
d <-  simplify2array(
lapply(1:day,function(j){
simplify2array(
lapply(1:hour,function(i){
simplify2array(
lapply(1:agemax, function(k){
veh[, k]*profile[i,j]*lkm*ef[[k]](speed[, 1:i*j])
}) ) }) ) }) )
length(ef)
dim(speed)
d <-  simplify2array(
lapply(1:day,function(j){
simplify2array(
lapply(1:hour,function(i){
simplify2array(
lapply(1:agemax, function(k){
veh[, k]*profile[i,j]*lkm*ef[[k]](speed[, i])
}) ) }) ) }) )
ef
ef <- lef
d <-  simplify2array(
lapply(1:day,function(j){
simplify2array(
lapply(1:hour,function(i){
simplify2array(
lapply(1:agemax, function(k){
veh[, k]*profile[i,j]*lkm*ef[[k]](speed[, i*j])
}) ) }) ) }) )
ef
lef <- ef_ldv_scaled(co1, cod, v = "PC", t = "4S", cc = "<=1400",
f = "G",p = "CO", eu=co1$Euro_LDV)
lef <- lapply(1:length(euro), function(i) {
ef_ldv_speed(v = "PC", t = "4S", cc = "<=1400", f = "G", p = "CO",
eu= euro[i], show.equation = FALSE)
})
lef
# veh is "Vehicles" data-frame
if (!inherits(x = veh, what = "list")) {
veh <- as.data.frame(veh)
for (i  in 1:ncol(veh) ) {
veh[,i] <- as.numeric(veh[,i])
}
if(ncol(veh) != length(ef)){
message("Number of columns of 'veh' is different than length of 'ef'")
message("adjusting length of ef to the number of colums of 'veh'\n")
if(ncol(veh) > length(ef)){
for(i in (length(ef) + 1):ncol(veh) ){
ef[[i]] <- ef[[length(ef)]]
}
if (ncol(veh) < length(ef)){
ff <- list()
for(i in 1:ncol(veh)){
ff[[i]] <- ef[[i]]
}
ef <- ff
}
}
}
if(array == F){
lista <- lapply(1:day,function(j){
lapply(1:hour,function(i){
lapply(1:agemax, function(k){
veh[, k]*profile[i,j]*lkm*ef[[k]](speed[, i])
}) }) })
return(EmissionsList(lista))
} else {
d <-  simplify2array(
lapply(1:day,function(j){
simplify2array(
lapply(1:hour,function(i){
simplify2array(
lapply(1:agemax, function(k){
veh[, k]*profile[i,j]*lkm*ef[[k]](speed[, i*j])
}) ) }) ) }) )
message(round(sum(d, na.rm = T)/1000,2),
" kg emissions in ", hour, " hours and ", day, " days")
return(EmissionsArray(d))
}
# veh is a list of "Vehicles" data-frames
} else {
if(ncol(veh[[1]]) != length(ef)){
message("Number of columns of 'veh' is different than length of 'ef'")
message("adjusting length of ef to the number of colums of 'veh'\n")
if(ncol(veh[[1]]) > length(ef)){
for(i in (length(ef) + 1):ncol(veh[[1]]) ){
ef[[i]] <- ef[[length(ef)]]
}
if (ncol(veh[[1]]) < length(ef)){
ff <- list()
for(i in 1:ncol(veh[[1]])){
ff[[i]] <- ef[[i]]
}
ef <- ff
}
}
}
for (j in 1:length(veh)) {
for (i  in 1:ncol(veh[[j]]) ) {
veh[[j]][,i] <- as.numeric(veh[[j]][,i])
} }
if(array == F){
lista <- lapply(1:length(veh),function(i){
lapply(1:agemax, function(k){
veh[[i]][, k]*lkm*ef[[k]](speed[, i])
} ) } )
return(EmissionsList(lista))
} else {
d <-  simplify2array(
lapply(1:length(veh),function(i){
simplify2array(
lapply(1:agemax, function(k){
veh[[i]][, k]*lkm*ef[[k]](speed[, i])
}) ) }) )
message(round(sum(d, na.rm = T)/1000,2),
" kg emissions in ", hour, " hours")
return(EmissionsArray(d))
}
}
array == T
d <-  simplify2array(
lapply(1:day,function(j){
simplify2array(
lapply(1:hour,function(i){
simplify2array(
lapply(1:agemax, function(k){
veh[, k]*profile[i,j]*lkm*ef[[k]](speed[, i*j])
}) ) }) ) }) )
ef
data(net)
data(pc_profile)
data(profiles)
data(fe2015)
data(fkm)
PC_G <- c(33491,22340,24818,31808,46458,28574,24856,28972,37818,49050,87923,
133833,138441,142682,171029,151048,115228,98664,126444,101027,
84771,55864,36306,21079,20138,17439, 7854,2215,656,1262,476,512,
1181, 4991, 3711, 5653, 7039, 5839, 4257,3824, 3068)
veh <- data.frame(PC_G = PC_G)
pc1 <- my_age(x = net$ldv, y = PC_G, name = "PC")
# Estimation for morning rush hour and local emission factors
speed <- data.frame(S8 = net$ps)
lef <- EmissionFactorsList(fe2015[fe2015$Pollutant=="CO", "PC_G"])
E_CO <- emis(veh = pc1,lkm = net$lkm, ef = lef, speed = speed,
profile = 1)
# Estimation for 168 hour and local factors
pcw <- temp_fact(net$ldv+net$hdv, pc_profile)
speed <- netspeed(pcw, net$ps, net$ffs, net$capacity, net$lkm, alpha = 1)
lef <- fe2015[fe2015$Pollutant=="CO", "PC_G"]
E_CO <- emis(veh = pc1,lkm = net$lkm, ef = lef, speed = speed,
profile = profiles$PC_JUNE_2014)
lef <- EmissionFactorList(fe2015[fe2015$Pollutant=="CO", "PC_G"])
E_CO <- emis(veh = pc1,lkm = net$lkm, ef = lef, speed = speed,
profile = profiles$PC_JUNE_2014)
lef
lef <- EmissionFactorList(fe2015[fe2015$Pollutant=="CO", "PC_G"])
lef <- EmissionFactorsList(fe2015[fe2015$Pollutant=="CO", "PC_G"])
E_CO <- emis(veh = pc1,lkm = net$lkm, ef = lef, speed = speed,
profile = profiles$PC_JUNE_2014)
summary(E_CO)
# Estimation for 168 hour and COPERT factors
pcw <- temp_fact(net$ldv+net$hdv, pc_profile)
speed <- netspeed(pcw, net$ps, net$ffs, net$capacity, net$lkm, alpha = 1)
euro <- as.character(fe2015[fe2015$Pollutant=="CO", "Euro_LDV"])
lef <- lapply(1:length(euro), function(i) {
ef_ldv_speed(v = "PC", t = "4S", cc = "<=1400", f = "G", p = "CO",
eu= euro[i], show.equation = FALSE)
})
E_CO <- emis(veh = pc1,lkm = net$lkm, ef = lef, speed = speed,
profile = profiles$PC_JUNE_2014)
# Estimation for 168 hour and scaled factors
pcw <- temp_fact(net$ldv+net$hdv, pc_profile)
speed <- netspeed(pcw, net$ps, net$ffs, net$capacity, net$lkm, alpha = 1)
pckm <- fkm[[1]](1:24); pckma <- cumsum(pckm)
cod1 <- emis_det(po = "CO", cc = 1000, eu = "III", km = pckma[1:11])
cod2 <- emis_det(po = "CO", cc = 1000, eu = "I", km = pckma[12:24])
#vehicles newer than pre-euro
co1 <- fe2015[fe2015$Pollutant=="CO", ] #24 obs!!!
cod <- c(co1$PC_G[1:24]*c(cod1,cod2),co1$PC_G[25:nrow(co1)])
lef <- ef_ldv_scaled(co1, cod, v = "PC", t = "4S", cc = "<=1400",
f = "G",p = "CO", eu=co1$Euro_LDV)
length(lef) != ncol(pc1)
#emis change length of 'ef' to match ncol of 'veh'
E_CO <- emis(veh = pc1,lkm = net$lkm, ef = lef, speed = speed,
profile = profiles$PC_JUNE_2014)
class(E_CO)
lpc <- list(pc1, pc1)
E_COv2 <- emis(veh = lpc,lkm = net$lkm, ef = lef, speed = speed,
hour = 2, day = 1)
# Entering wrong results
pc1[ , ncol(pc1) + 1] <- pc1$PC_1
dim(pc1)
length(lef)
E_CO <- emis(veh = pc1,lkm = net$lkm, ef = lef, speed = speed,
profile = profiles$PC_JUNE_2014)
E_COv2 <- emis(veh = lpc,lkm = net$lkm, ef = lef, speed = speed,
hour = 2, day = 1)
E_CO <- emis(veh = pc1,lkm = net$lkm, ef = lef, speed = speed,
profile = profiles$PC_JUNE_2014)
lpc
E_COv2 <- emis(veh = lpc,lkm = net$lkm, ef = lef, speed = speed,
hour = 2, day = 1)
devtools::load_all(".")
library(vein)
library(vein)
E_COv2 <- emis(veh = lpc,lkm = net$lkm, ef = lef, speed = speed,
hour = 2, day = 1)
lpc
E_COv2 <- emis(veh = lpc,lkm = net$lkm, ef = lef, speed = speed,
hour = 2, day = 1)
devtools::load_all(".")
library(vein)
library(vein)
PC_CO_COLDv2 <- emis_cold(veh = pc1, lkm = net$lkm, ef = lef, efcold = lefec,
beta = pcf, speed = speed, profile = pc_profile, hour = 2,
day = 1)
E_COv2 <- emis(veh = lpc,lkm = net$lkm, ef = lef, speed = speed,
hour = 2, day = 1)
vkms  <- vkm(veh = pc, lkm = lkm, profile = pro)
warnings()
pc <- lkm <- abs(rnorm(10,1,1))*100
pro <- matrix(abs(rnorm(24*7,0.5,1)), ncol=7, nrow=24)
vkms  <- vkm(veh = pc, lkm = lkm, profile = pro)
vkms
devtools::load_all(".")
library(vein)
pkgdown:::build_site_rstudio()
