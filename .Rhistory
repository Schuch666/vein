expect_equal(ef_hdv_speed(v = "Trucks",t = "RT", g = "<=7.5", e = "II", gr = 0,
l = 0.5, p = "HC", show.equation = FALSE)(30), 0.2073987)
print(ef_hdv_speed(v = "Trucks",t = "RT", g = "<=7.5", e = "II", gr = 0,
l = 0.5, p = "HC", show.equation = FALSE)(30), digits = 10)
test_that("ef_hdv_speed works", {
expect_equal(ef_hdv_speed(v = "Trucks",t = "RT", g = "<=7.5", e = "II", gr = 0,
l = 0.5, p = "HC", show.equation = FALSE)(30), 0.207398745)
})
test_that("ef_hdv_speed works", {
expect_equal(ef_hdv_speed(v = "Trucks",t = "RT", g = "<=7.5", e = "II", gr = 0,
l = 0.5, p = "HC", show.equation = FALSE)(30), 0.207398745)
})
devtools::load_all(".")
pkgdown:::build_site_rstudio()
devtools::load_all(".")
pkgdown:::build_site_rstudio()
devtools::load_all(".")
pkgdown:::build_site_rstudio()
pkgdown:::build_site_rstudio()
devtools::load_all(".")
pkgdown:::build_site_rstudio()
devtools::load_all(".")
pkgdown:::build_site_rstudio()
devtools::load_all(".")
library(vein)
library(vein)
library(vein)
devtools::load_all(".")
library(vein)
library(vein)
library(vein)
pkgdown:::build_site_rstudio()
devtools::load_all(".")
devtools::load_all(".")
library(vein)
library(vein)
pkgdown:::build_site_rstudio()
devtools::load_all(".")
library(vein)
library(vein)
inventory(name = file.path(tempdir(), "YourCity"), show.dir = TRUE,
show.scripts = TRUE)
pkgdown:::build_site_rstudio()
source(paste0(file.path(tempdir(), "YourCity"), "/main.R"))
source(paste0(file.path(tempdir(), "YourCity"), "/main.R"))
setwd('/tmp/Rtmpllu2Wk/YourCity')
library(vein)
sessionInfo()
# 1) Network ####
# Edit your net information and save net.rds it in network directory
# Your net must contain traffic per street at morning rush hour
# Below an example using the data in VEIN
data(net)
head(net)
# Are you going to need Speed?
# if yes, follow the example in netspeed
# ?netspeed
saveRDS(net, 'network/net.rds')
source('traffic.R') # Edit traffic.R
# 3) Estimation ####
# Edit each input.R
# You must have all the information required in each input.R
inputs <- list.files(path = 'est', pattern = 'input.R',
recursive = TRUE, full.names = TRUE)
inputs
name = file.path(tempdir(), "YourCity")
lista <- list.dirs(path = paste0(name,"/emi"))
lista
devtools::load_all("~/Documents/vein")
library(vein)
library(vein)
devtools::load_all(".")
library(vein)
library(vein)
devtools::load_all(".")
devtools::load_all(".")
library(vein)
library(vein)
devtools::load_all(".")
library(vein)
devtools::load_all(".")
library(vein)
library(vein)
pkgdown:::build_site_rstudio()
devtools::load_all(".")
library(vein)
library(vein)
pkgdown:::build_site_rstudio()
?vein::netspeed
devtools::load_all(".")
library(vein)
library(vein)
library(vein)
lt <- rep(10, 10)
LT_B5 <- age_hdv(x = lt,name = "LT_B5")
plot(LT_B5)
LT_B5
library(devtools)
library(testthat)
use_testthat()
use_test("age_hdv")
lt <- Vehicles(10)
lt
LT_B5 <- age_hdv(x = lt, name = "LT_B5", agemax = 1)
LT_B5
LT_B5 <- age_hdv(x = lt, name = "LT_B5", agemax = 2)
LT_B5
class(LT_B5)
Vehicles(5)
test_that("age_hdv works", {
expect_equal(age_hdv(x = 10, name = "LT_B5", agemax = 2),
data.frame(LT_B5_1 = Vehicles(5),
LT_B5_2 = Vehicles(5)))
})
test_that("age_hdv works", {
expect_equal(age_hdv(x = 10, name = "LT_B5", agemax = 2),
Vehicles(data.frame(LT_B5_1 = 5,
LT_B5_2 = 5)))
})
test_that("age_hdv works", {
expect_equal(age_hdv(x = 10, name = "LT_B5", agemax = 2),
Vehicles(data.frame(LT_B5_1 = 5,
LT_B5_2 = 5)))
})
use_test("age_ldv")
age_ldv(x = 10, name = "PC", agemax = 2)
test_that("age_ldv works", {
expect_equal(age_ldv(x = 10, name = "PC", agemax = 2),
Vehicles(data.frame(PC_1 = 5,
PC_1 = 5)))
})
test_that("age_ldv works", {
expect_equal(age_ldv(x = 10, name = "PC", agemax = 2),
Vehicles(data.frame(PC_1 = 5,
PC_2 = 5)))
})
use_test("age_moto")
test_that("age_moto works", {
expect_equal(age_moto(x = 10, name = "MC", agemax = 2),
Vehicles(data.frame(MC_1 = 5,
MC_2 = 5)))
})
devtools::load_all(".")
library(vein)
library(vein)
use_coverage(pkg = ".", type = c("codecov"))
devtools::load_all(".")
library(vein)
library(vein)
test_that("age_ldv works", {
expect_equal(age_ldv(x = 10, name = "PC", agemax = 2),
Vehicles(data.frame(PC_1 = 5,
PC_2 = 5)))
})
devtools::load_all(".")
library(vein)
library(vein)
pkgdown:::build_site_rstudio()
devtools::load_all(".")
library(vein)
matrix(1)
?vein::ef_ldv_speed
?vein::ef_ldv_speed[, 1]
matrix(1)[, 1]
matrix(1)[1, ]
devtools::load_all(".")
library(vein)
devtools::load_all(".")
library(vein)
library(vein)
devtools::load_all(".")
library(vein)
library(devtools)
library(testthat)
use_testthat()
ef_evap(ef = "erhotc",v = "PC", cc = "<=1400", dt = "0_15", ca = "no",
show = TRUE)
#' ef_evap(ef = "erhotc",v = "PC", cc = "<=1400", dt = "0_15", ca = "no",
#' show = TRUE)
ef_evap(ef = "erhotc",v = "PC", cc = "<=1400", dt = "0_15", ca = "no", F
)
ef_evap(ef = "erhotc",v = "PC", cc = "<=1400", dt = "0_15", ca = "no", T)
ef_evap(ef = "erhotc",v = "PC", cc = "<=1400", dt = "0_15", ca = "no", F)
ef_evap(ef = "erhotc",v = "PC", cc = "<=1400", dt = "0_15", ca = "no", F)
ef_evap(ef = "erhotc",v = "PC", cc = "<=1400", dt = "0_15", ca = "no", show = TRUE)
ef_evap(ef = "erhotc",v = "PC", cc = "<=1400", dt = "0_15", ca = "no", show = FALSE)
ef_evap(ef = "erhotc",v = "PC", cc = "<=1400", dt = "0_15", ca = "no", show = FALSE)
use_test("ef_evap")
expect_equal(ef_evap(ef = "erhotc",
v = "PC",
cc = "<=1400",
dt = "0_15",
ca = "no",
show = FALSE),
units::as_units(2.39, "g"))
ef1 <- ef_ldv_cold(ta = 15, cc = "<=1400", f ="G", eu = "I", p = "CO")
ef1(10)
use_test("ef_ldv_cold")
expect_equal(ef_ldv_cold(ta = 15,
cc = "<=1400",
f = "G",
eu = "I",
p = "CO"),
2.754)
test_that("ef_ldv_cold works", {
expect_equal(ef_ldv_cold(ta = 15,
cc = "<=1400",
f = "G",
eu = "I",
p = "CO"),
2.754)
})
test_that("ef_ldv_cold works", {
expect_equal(ef_ldv_cold(ta = 15,
cc = "<=1400",
f = "G",
eu = "I",
p = "CO")(10),
2.754)
})
df <- data.frame(age1 = c(1,1), age2 = c(2,2))
eu = c("I", "PRE")
l <- ef_ldv_cold(t = 17, cc = "<=1400", f = "G",
eu = "I", p = "CO")
l
use_test("ef_ldv_cold_list")
df <- data.frame(age1 = c(1,1), age2 = c(2,2)), eu = c("I", "PRE")
df
df <- data.frame(age1 = c(1,1), age2 = c(2,2), eu = c("I", "PRE")
df
df <- data.frame(age1 = c(1,1), age2 = c(2,2), eu = c("I", "PRE"))
df
l <- ef_ldv_cold(t = 17, cc = "<=1400", f = "G", eu = "I", p = "CO")
l
l <- ef_ldv_cold(t = 17, cc = "<=1400", f = "G", eu = "I", p = "CO")(20)
ef_ldv_cold(t = 17, cc = "<=1400", f = "G", eu = "I", p = "CO")(20)
expect_equal(ef_ldv_cold(t = 17,
cc = "<=1400",
f = "G",
eu = "I",
p = "CO")(20),
3.884)
devtools::load_all(".")
library(vein)
library(vein)
library(vein)
data(net)
data(pc_profile)
data(profiles)
data(fe2015)
data(fkm)
PC_G <- c(33491,22340,24818,31808,46458,28574,24856,28972,37818,49050,87923,
133833,138441,142682,171029,151048,115228,98664,126444,101027,
84771,55864,36306,21079,20138,17439, 7854,2215,656,1262,476,512,
1181, 4991, 3711, 5653, 7039, 5839, 4257,3824, 3068)
veh <- data.frame(PC_G = PC_G)
pc1 <- my_age(x = net$ldv, y = PC_G, name = "PC")
# Estimation for morning rush hour and local emission factors
speed <- data.frame(S8 = net$ps)
p1h <- matrix(1)
lef <- EmissionFactorsList(fe2015[fe2015$Pollutant=="CO", "PC_G"])
E_CO <- emis(veh = pc1,lkm = net$lkm, ef = lef, speed = speed,
profile = pc1h)
profile = p1h)
E_CO <- emis(veh = pc1,lkm = net$lkm, ef = lef, speed = speed,
profile = p1h)
plot(E_CO, main = "Emissions for morning rush hour")
summary(E_CO)
E_CO
data(net)
data(pc_profile)
data(fe2015)
data(fkm)
PC_G <- c(33491,22340,24818,31808,46458,28574,24856,28972,37818,49050,87923,
133833,138441,142682,171029,151048,115228,98664,126444,101027,
84771,55864,36306,21079,20138,17439, 7854,2215,656,1262,476,512,
1181, 4991, 3711, 5653, 7039, 5839, 4257,3824, 3068)
veh <- data.frame(PC_G = PC_G)
# Estimation for morning rush hour and local emission factors
speed <- data.frame(S8 = net$ps)
p1h <- matrix(1)
lef <- EmissionFactorsList(fe2015[fe2015$Pollutant=="CO", "PC_G"])
E_CO <- emis(veh = pc1,lkm = net$lkm, ef = lef, speed = speed,
profile = p1h)
# Estimation 168 hours
pc1 <- my_age(x = net$ldv, y = PC_G, name = "PC")
pcw <- temp_fact(net$ldv+net$hdv, pc_profile)
E_CO_STREETS <- emis_post(arra = E_CO, pollutant = "CO", by = "streets_wide")
summary(E_CO_STREETS)
E_CO_STREETS
dim(E_CO_STREETS)
E_CO_DF <- emis_post(arra = E_CO,  veh = "PC", size = "<1400", fuel = "G",
pollutant = "CO", by = "veh")
arra = E_CO
E_CO
x <- unlist(lapply(1:dim(arra)[4], function(j) {
unlist(lapply (1:dim(arra)[3],function(i) {
colSums(arra[,,i,j], na.rm = TRUE)
}))
}))
x
plot(x)
plot(x, type = "b")
plot(x, type = "b", pch = 15)
df <- cbind(deparse(substitute(arra)),
as.data.frame(x))
df
names(df) <- c(as.character(df[1,1]), "g")
nombre <- rep(paste(as.character(df[1,1]),
seq(1:dim(arra)[2]),
sep = "_"),24*7, by=7 )
dim(arra)
pcw <- temp_fact(net$ldv+net$hdv, pc_profile)
speed <- netspeed(pcw, net$ps, net$ffs, net$capacity, net$lkm, alpha = 1)
euro <- as.character(fe2015[fe2015$Pollutant=="CO", "Euro_LDV"])
lef <- lapply(1:length(euro), function(i) {
ef_ldv_speed(v = "PC", t = "4S", cc = "<=1400", f = "G", p = "CO",
eu= euro[i])
})
lef <- lapply(1:length(euro), function(i) {
ef_ldv_speed(v = "PC", t = "4S", cc = "<=1400", f = "G", p = "CO",
eu= euro[i], show.equation = FALSE)
})
E_CO <- emis(veh = pc1,lkm = net$lkm, ef = lef, speed = speed,
profile = profiles$PC_JUNE_2014)
dim(E_CO)
nombre <- rep(paste(as.character(df[1,1]),
seq(1:dim(arra)[2]),
sep = "_"),
dim(arra)[3]*dim(arra)[4],
by = dim(arra)[4])
nombre
df[,1] <- nombre
df$veh <- rep(veh, nrow(df))
df$size <- rep(size, nrow(df))
df$fuel <- rep(fuel, nrow(df))
df$pollutant <- rep(pollutant, nrow(df))
#'            pc1*0.5, pc1*0.5, pc1*0.5, pc1*0.8,
#'            pc1, pc1*1.1, pc1,
#'            pc1*0.8, pc1*0.5, pc1*0.3, pc1*0.2, pc1*0.1)
#' E_COv2 <- emis(veh = lpc,  lkm = net$lkm, ef = lef, speed = speed[, 1:24],
#'             agemax = 41, hour = 24, day = 1)
#' plot(E_COv2)
#' E_CO_DFv2 <- emis_post(arra = E_COv2,  veh = "PC", size = "<1400", fuel = "G",
#' pollutant = "CO", by = "veh")
#' head(E_CO_DFv2)
#' }
emis_post <- function(arra, veh, size, fuel, pollutant, by = "veh") {
if ( class(arra) != "EmissionsArray" && !is.array(arra) ){
stop("No EmissionsArray")
} else if (length(dim(arra)) == 4){
if (by == "veh" & class(arra)=="EmissionsArray" && is.array(arra) ){
x <- unlist(lapply(1:dim(arra)[4], function(j) {
unlist(lapply (1:dim(arra)[3],function(i) {
colSums(arra[,,i,j], na.rm = TRUE)
}))
}))
df <- cbind(deparse(substitute(arra)),
as.data.frame(x))
names(df) <- c(as.character(df[1,1]), "g")
nombre <- rep(paste(as.character(df[1,1]),
seq(1:dim(arra)[2]),
sep = "_"),
dim(arra)[3]*dim(arra)[4],
by = dim(arra)[4])
df[,1] <- nombre
df$veh <- rep(veh, nrow(df))
df$size <- rep(size, nrow(df))
df$fuel <- rep(fuel, nrow(df))
df$pollutant <- rep(pollutant, nrow(df))
df$age <- rep(seq(1:dim(arra)[2]),
dim(arra)[3]*dim(arra)[4],
by = dim(arra)[4])
hour <- rep(1:(dim(arra)[3]*dim(arra)[4]), #hours x days
each = dim(arra)[2]) #veh cat
df$hour <- hour
df$g <- Emissions(df$g)
return(df)
} else if (by == "streets_narrow") {
# soon deprecated this function?
x <- unlist(lapply(1:dim(arra)[4], function(j) {# dia
unlist(lapply (1:dim(arra)[3],function(i) { # hora
rowSums(arra[,,i,j], na.rm = TRUE)
}))
}))
df <- cbind(deparse(substitute(arra)),as.data.frame(x))
names(df) <- c(as.character(df[1,1]), pollutant)
hour <- rep(seq(0: (dim(arra)[3]-1) ),
times = dim(arra)[4],
each=dim(arra)[1])
df$hour <- hour
df[,1] <- seq(1,dim(arra)[1])
df[,2] <- df[,2] * units::as_units("g h-1")
return(df)
} else if (by == "streets_wide") {
x <- unlist(lapply(1:dim(arra)[4], function(j) {# dia
unlist(lapply (1:dim(arra)[3],function(i) { # hora
rowSums(arra[,,i,j], na.rm = T)
}))
}))
m <- matrix(x, nrow=dim(arra)[1], ncol=dim(arra)[3]*dim(arra)[4])
df <- as.data.frame(m)
nombres <- lapply(1:dim(m)[2], function(i){paste0("h",i)})
return(Emissions(df))
}
} else {
if (by == "veh" & class(arra)=="EmissionsArray" && is.array(arra) ){
x <- as.vector(apply(X = arra, MARGIN = c(2,3), FUN = sum, na.rm = TRUE))
df <- cbind(deparse(substitute(arra)),
as.data.frame(x))
names(df) <- c(as.character(df[1,1]), "g")
nombre <- rep(paste(as.character(df[1,1]),
seq(1:dim(arra)[2]),
sep = "_"),dim(arra)[3], by=7 )
df[,1] <- nombre
df$veh <- rep(veh, nrow(df))
df$size <- rep(size, nrow(df))
df$fuel <- rep(fuel, nrow(df))
df$pollutant <- rep(pollutant, nrow(df))
df$age <- rep(1:dim(arra)[2], dim(arra)[3])
hour <- rep(1:dim(arra)[3], #hours x days
each = dim(arra)[2]) #veh cat
df$hour <- hour
df$g <- Emissions(df$g)
return(df)
} else if (by == "streets_narrow") {
df <- as.vector(apply(X = arra, MARGIN = c(2,3), FUN = sum, na.rm = TRUE))
warning("TODO: Improve")
return(df)
} else if (by == "streets_wide") {
df <- Emissions(apply(X = arra, MARGIN = c(1,3), FUN = sum, na.rm = TRUE))
names(df) <- lapply(1:dim(arra)[3], function(i){paste0("h",i)})
return(df)
}
}
}
E_CO_DF <- emis_post(arra = arra,  veh = "PC", size = "<1400", fuel = "G",
pollutant = "CO", by = "veh")
E_CO_DF
E_CO_DF <- emis_post(arra = E_CO,  veh = "PC", size = "<1400", fuel = "G",
pollutant = "CO", by = "veh")
E_CO_DF
devtools::load_all(".")
library(vein)
rm(emis_post)
library(vein)
pkgdown:::build_site_rstudio()
pkgdown:::build_site_rstudio()
knitr::opts_chunk$set(echo = TRUE)
library(vein)
inventory(name = file.path(tempdir(), "YourCity"), show.dir = T,
show.scripts = T)
data("net")
PC_E25_1400 <- age_ldv(x = net$ldv, name = "PC_E25_1400")
plot(PC_E25_1400, xlab = "age of use")
data("net")
pc_week <- temp_fact(net$ldv+net$hdv, pc_profile)
class(dfspeed)
data("net")
data("pc_profile")
pc_week <- temp_fact(net$ldv+net$hdv, pc_profile)
dfspeed <- netspeed(pc_week, net$ps, net$ffs, net$capacity, net$lkm, alpha = 1.2)
class(dfspeed)
plot(dfspeed, xlab = "hours")
data("net")
data("pc_profile")
pc_week <- temp_fact(net$ldv+net$hdv, pc_profile)
dfspeed <- netspeed(pc_week, net$ps, net$ffs, net$capacity, net$lkm, alpha = 1.5)
class(dfspeed)
plot(dfspeed, xlab = "hours")
plot(dfspeed, xlab = "hours", pch = 16)
plot(dfspeed, xlab = "hours", ylab = "Speed [km/h]")
plot(dfspeed, xlab = "Hours", ylab = "Speed [km/h]")
pkgdown:::build_site_rstudio()
devtools::load_all(".")
library(vein)
library(vein)
library(vein)
devtools::load_all(".")
data(net)
library(vein)
data(net)
g <- make_grid(net, 1/102.47/2) #500m in degrees
names(net)
sp::spplot(net, "ldv", scales=list(draw = TRUE),cuts=8,
colorkey = list(space = "bottom", height = 1),
col.regions = rev(sp::bpy.colors(9)),
sp.layout = list("sp.lines", net, pch = 16, cex = 2, col = "black"))
netg <- emis_grid(spobj = net, g = g, sr= 31983)
sp::spplot(netg, "ldv", scales=list(draw = TRUE),cuts=8,
colorkey = list(space = "bottom", height = 1),
col.regions = rev(sp::bpy.colors(9)),
sp.layout = list("sp.lines", net, pch = 16, cex = 2, col = "black"))
plot(netg["ldv"])
plot(netg["hdv"], axes = T)
devtools::load_all(".")
library(vein)
devtools::load_all(".")
library(vein)
library(vein)
devtools::load_all(".")
library(vein)
library(vein)
pkgdown:::build_site_rstudio()
devtools::load_all(".")
library(vein)
library(vein)
devtools::load_all(".")
library(vein)
library(vein)
library(vein)
pkgdown:::build_site_rstudio()
