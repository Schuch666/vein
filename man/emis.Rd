% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/emis.R
\name{emis}
\alias{emis}
\title{Estimation of emissions}
\usage{
emis(veh, lkm, ef, speed, agemax = ifelse(is.data.frame(veh), ncol(veh),
  ncol(veh[[1]])), profile, simplify = FALSE, hour = nrow(profile),
  day = ncol(profile), array = TRUE, verbose = FALSE)
}
\arguments{
\item{veh}{"Vehicles" data-frame or list of "Vehicles" data-frame. Each data-frame
as number of columns matching the age distribution of that ype of vehicle.
The number of rows is equal to the number of streets link. If this is a list,
the length of the list is the vehicles for each hour.}

\item{lkm}{Length of each link in km}

\item{ef}{List of functions of emission factors}

\item{speed}{Speed data-frame with number of columns as hours. The default value is 34km/h}

\item{agemax}{Age of oldest vehicles for that category}

\item{profile}{Dataframe or Matrix with nrows equal to 24 and ncol 7 day of
the week}

\item{simplify}{Logical; to determine if EmissionsArray should les dimensions,
being streets, vehicle categories and hours or default (streets, vehicle
categories, hours and days). Default is FALSE to avoid break old code, but
the recommendation is that new estimations use this parameter as TRUE}

\item{hour}{Number of considered hours in estimation. Default value is number
of rows of argument profile}

\item{day}{Number of considered days in estimation}

\item{array}{Deprecated! \code{\link{emis_cold}} returns only arrays.
When TRUE and veh is not a list, expects a profile as a dataframe producing
an array with dimensions (streets x columns x hours x days)}

\item{verbose}{Logical; To show more information}
}
\value{
If the user applies a top-down approach, the resulting units will be
according its own data. For instance, if the vehicles are veh/day, the units
of the emissions implicitly will be g/day.
}
\description{
\code{\link{emis}} estimates vehicular emissions as the product of the
vehicles on a road, length of the road, emission factor avaliated at the
respective speed. \eqn{E = VEH*LENGTH*EF(speed)}
}
\note{
Hour and day will be deprecated because they can be infered from the profile
matrix.
}
\examples{
\dontrun{
# Do not run
data(net)
data(pc_profile)
data(profiles)
data(fe2015)
data(fkm)
PC_G <- c(33491,22340,24818,31808,46458,28574,24856,28972,37818,49050,87923,
          133833,138441,142682,171029,151048,115228,98664,126444,101027,
          84771,55864,36306,21079,20138,17439, 7854,2215,656,1262,476,512,
          1181, 4991, 3711, 5653, 7039, 5839, 4257,3824, 3068)
veh <- data.frame(PC_G = PC_G)
pc1 <- my_age(x = net$ldv, y = PC_G, name = "PC")
# Estimation for morning rush hour and local emission factors
speed <- data.frame(S8 = net$ps)
lef <- EmissionFactorsList(fe2015[fe2015$Pollutant=="CO", "PC_G"])
E_CO <- emis(veh = pc1,lkm = net$lkm, ef = lef, speed = speed,
             profile = 1)

# Estimation for 168 hour and local factors
pcw <- temp_fact(net$ldv+net$hdv, pc_profile)
speed <- netspeed(pcw, net$ps, net$ffs, net$capacity, net$lkm, alpha = 1)
lef <- EmissionFactorsList(fe2015[fe2015$Pollutant=="CO", "PC_G"])

E_CO <- emis(veh = pc1,
             lkm = net$lkm,
             ef = lef,
             speed = speed,
             profile = profiles$PC_JUNE_2014)
summary(E_CO)
lpc <- list(pc1, pc1)
E_COv2 <- emis(veh = lpc,lkm = net$lkm, ef = lef, speed = speed)
# top down
veh <- age_ldv(x = net$ldv[1:4], name = "PC_E25_1400", agemax = 4)
mil <- fkm$KM_PC_E25(1:4)
ef <- ef_cetesb("COd", "PC_G")[1:4]
emis(veh, units::set_units(mil, "km"), ef)
# group online
bus1 <- age_hdv(30, agemax = 4)
veh = bus1
lkm = units::set_units(400, "km")
speed = 40
efco <- ef_cetesb("COd", "UB", agemax = 4)
lef <- ef_hdv_scaled(dfcol = as.numeric(efco),
                     v = "Ubus",
                     t = "Std",
                     g = ">15 & <=18",
                     eu = rep("IV", 4),
                     gr = 0,
                     l = 0.5,
                     p = "CO")
for(i in 1:length(lef)) print(lef[[i]](10))
emis(veh = bus1, lkm = lkm, ef = efco, verbose = T)
}
}
